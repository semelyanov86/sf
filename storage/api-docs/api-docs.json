{
    "openapi": "3.0.0",
    "info": {
        "title": "SimpleFinance OpenApi Documentation",
        "description": "Documentation about API of Sumple Finance App",
        "contact": {
            "email": "se@sergeyem.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8080/api",
            "description": "Demo SimpleFinance server"
        }
    ],
    "paths": {
        "/auto-brands": {
            "get": {
                "tags": [
                    "AutoBrands"
                ],
                "summary": "Get list of auto brands registered in system",
                "description": "Returns list of auto brands",
                "operationId": "getAutoBrandsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardTypeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "AutoBrands"
                ],
                "summary": "Store new auto brand",
                "description": "Returns auto brands data",
                "operationId": "storeAutoBrand",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreAutoBrandRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoBrandVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/auto-brands/{id}": {
            "get": {
                "tags": [
                    "AutoBrands"
                ],
                "summary": "Get auto brand information",
                "description": "Returns auto brand data",
                "operationId": "getAutoBrandById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Auto Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoBrandVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "AutoBrands"
                ],
                "summary": "Update existing auto brand",
                "description": "Returns updated auto brand data",
                "operationId": "updateAutoBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Auto Brand id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAutoBrandRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutoBrandVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AutoBrands"
                ],
                "summary": "Delete existing auto brand",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteAutoBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Auto Brand type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/banks": {
            "get": {
                "tags": [
                    "Banks"
                ],
                "summary": "Get list of banks registered in system",
                "description": "Returns list of banks",
                "operationId": "getBanksList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Banks"
                ],
                "summary": "Store new bank",
                "description": "Returns bank data",
                "operationId": "storeBank",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBankRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/banks/{id}": {
            "get": {
                "tags": [
                    "Banks"
                ],
                "summary": "Get bank information",
                "description": "Returns bank data",
                "operationId": "getBankById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Banks"
                ],
                "summary": "Update existing bank",
                "description": "Returns updated bank data",
                "operationId": "updateBank",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBankRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Banks"
                ],
                "summary": "Delete existing bank",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBank",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bank type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/card-types": {
            "get": {
                "tags": [
                    "CardTypes"
                ],
                "summary": "Get list of card types registered in system",
                "description": "Returns list of card types",
                "operationId": "getCardTypesList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardTypeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "CardTypes"
                ],
                "summary": "Store new card type",
                "description": "Returns card types data",
                "operationId": "storeCardType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardTypeRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardTypeVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/card-types/{id}": {
            "get": {
                "tags": [
                    "CardTypes"
                ],
                "summary": "Get card type information",
                "description": "Returns card type data",
                "operationId": "getCardTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardTypeVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "CardTypes"
                ],
                "summary": "Update existing card type",
                "description": "Returns updated card type data",
                "operationId": "updateCardType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card Type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardTypeRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardTypeVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CardTypes"
                ],
                "summary": "Delete existing card type",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCardType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card type id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of Countries registered in system",
                "description": "Returns list of Countries",
                "operationId": "getCountriesList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Countries"
                ],
                "summary": "Store new country",
                "description": "Returns country data",
                "operationId": "storeCountry",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCountryRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/countries/{id}": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get country information",
                "description": "Returns country data",
                "operationId": "getCountryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Countries"
                ],
                "summary": "Update existing country",
                "description": "Returns updated country data",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCountryRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Countries"
                ],
                "summary": "Delete existing country",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Country id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get list of currencies registered in system",
                "description": "Returns list of currencies",
                "operationId": "getCurrenciesList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Store new currency",
                "description": "Returns currency data",
                "operationId": "storeCurrency",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCurrencyRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/currencies/{id}": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get currency information",
                "description": "Returns currency data",
                "operationId": "getCurrencyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Update existing currency",
                "description": "Returns updated currency data",
                "operationId": "updateCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCurrencyRequestVirtual"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CurrencyVirtual"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete existing currency",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCurrency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get list of teams registered in system",
                "description": "Returns list of teams",
                "operationId": "getTeamsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Teams"
                ],
                "summary": "Store new team",
                "description": "Returns team data",
                "operationId": "storeTeam",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTeamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/teams/{id}": {
            "get": {
                "tags": [
                    "Teams"
                ],
                "summary": "Get team information",
                "description": "Returns team data",
                "operationId": "getTeamById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Teams"
                ],
                "summary": "Update existing team",
                "description": "Returns updated team data",
                "operationId": "updateTeam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTeamRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teams"
                ],
                "summary": "Delete existing team",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTeam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Team id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of permissions in system",
                "description": "Returns list of permissions",
                "operationId": "getPermissionsList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PermissionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/[permissions]": {
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Store new permission",
                "description": "Returns permission data",
                "operationId": "storePermission",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission information",
                "description": "Returns permission data",
                "operationId": "getPermissionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update existing permission",
                "description": "Returns updated permission data",
                "operationId": "updatePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete existing permission",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of roles in system",
                "description": "Returns list of roles",
                "operationId": "getRolesList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RoleResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/[roles]": {
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Store new role",
                "description": "Returns role data",
                "operationId": "storeRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role information",
                "description": "Returns role data",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete existing role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/role/{id}": {
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update existing role",
                "description": "Returns updated role data",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users registered in system",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get current user information",
                "description": "Returns profile user data",
                "operationId": "getProfileInformation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AutoBrandVirtual": {
                "title": "AutoBrand",
                "description": "Auto brand Model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of auto brand",
                        "type": "string",
                        "example": "Lada Vesta"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of auto brand",
                        "type": "string",
                        "example": "Super car!"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "AutoBrandResource": {
                "title": "AutoBrandResource",
                "description": "Auto Brand resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutoBrandVirtual"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AutoBrandResource"
                }
            },
            "StoreAutoBrandRequestVirtual": {
                "title": "Store Card Type request",
                "description": "Store Card Type request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new auto brand",
                        "type": "string",
                        "example": "Lada vesta"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of new auto brand",
                        "type": "string",
                        "example": "Super mega car!"
                    }
                },
                "type": "object"
            },
            "UpdateAutoBrandRequestVirtual": {
                "title": "Update auto brand request",
                "description": "Update auto brand request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new auto brand",
                        "type": "string",
                        "example": "Lada Vesta"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of auto brand",
                        "type": "string",
                        "example": "Super car!"
                    }
                },
                "type": "object"
            },
            "BankVirtual": {
                "title": "Bank",
                "description": "Bank Model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of bank",
                        "type": "string",
                        "example": "Sberbank"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of bank",
                        "type": "string",
                        "example": "Super bank!"
                    },
                    "country_id": {
                        "title": "Country ID",
                        "description": "ID of attached country",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "country": {
                        "$ref": "#/components/schemas/CountryVirtual"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "BankResource": {
                "title": "BankResource",
                "description": "Bank resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankVirtual"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "BankResource"
                }
            },
            "StoreBankRequestVirtual": {
                "title": "Store Bank request",
                "description": "Store Bank request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new bank",
                        "type": "string",
                        "example": "VTB24"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of bank",
                        "type": "string",
                        "example": "Super bank!"
                    },
                    "country_id": {
                        "title": "country_id",
                        "description": "Country ID of new bank",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateBankRequestVirtual": {
                "title": "Update Bank request",
                "description": "Update Bank request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new bank",
                        "type": "string",
                        "example": "VTB24"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of bank",
                        "type": "string",
                        "example": "Super bank!"
                    },
                    "country_id": {
                        "title": "country_id",
                        "description": "Country ID of new bank",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CardTypeVirtual": {
                "title": "CardType",
                "description": "Card type Model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of card type",
                        "type": "string",
                        "example": "Visa"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of card type",
                        "type": "string",
                        "example": "Visa credit card"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "CardTypeResource": {
                "title": "CardTypeResource",
                "description": "Card Type resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CardTypeVirtual"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CardTypeResource"
                }
            },
            "StoreCardTypeRequestVirtual": {
                "title": "Store Card Type request",
                "description": "Store Card Type request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new card type",
                        "type": "string",
                        "example": "Visa"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of new card type",
                        "type": "string",
                        "example": "Visa card credit"
                    }
                },
                "type": "object"
            },
            "UpdateCardTypeRequestVirtual": {
                "title": "Update card type request",
                "description": "Update card type request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new card type",
                        "type": "string",
                        "example": "Visa"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of card type",
                        "type": "string",
                        "example": "Visa debit card"
                    }
                },
                "type": "object"
            },
            "CountryVirtual": {
                "title": "Country",
                "description": "Country Model",
                "required": [
                    "name",
                    "short_code"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of country",
                        "type": "string",
                        "example": "Russia"
                    },
                    "short_code": {
                        "title": "Short Code",
                        "description": "Code of country",
                        "type": "string",
                        "example": "ru"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "CountryResource": {
                "title": "CountryResource",
                "description": "Country resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CountryVirtual"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CountryResource"
                }
            },
            "StoreCountryRequestVirtual": {
                "title": "Store Country request",
                "description": "Store Country request body data",
                "required": [
                    "name",
                    "short_code"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new country",
                        "type": "string",
                        "example": "Russian Federation"
                    },
                    "short_code": {
                        "title": "short_code",
                        "description": "Code of new country",
                        "type": "string",
                        "example": "ru"
                    }
                },
                "type": "object"
            },
            "UpdateCountryRequestVirtual": {
                "title": "Update Country request",
                "description": "Update country request body data",
                "required": [
                    "name",
                    "short_code"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new country",
                        "type": "string",
                        "example": "Russian Federation"
                    },
                    "short_code": {
                        "title": "short_code",
                        "description": "Code of new country",
                        "type": "string",
                        "example": "ru"
                    }
                },
                "type": "object"
            },
            "CurrencyVirtual": {
                "title": "Currency",
                "description": "Currency Model",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of currency",
                        "type": "string",
                        "example": "Российский рубль"
                    },
                    "code": {
                        "title": "Short Code",
                        "description": "Code of currency",
                        "type": "string",
                        "example": "RUB"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "course": {
                        "title": "Course of currency",
                        "description": "Current currency course",
                        "type": "float",
                        "example": "70.86"
                    },
                    "update_date": {
                        "title": "Update Date",
                        "description": "Date of updating course currency",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-01-28 17:50:45"
                    },
                    "users": {
                        "title": "Attached users to currency",
                        "description": "Users",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "xml": {
                            "name": "user",
                            "wrapped": true
                        }
                    }
                },
                "type": "object"
            },
            "CurrencyResource": {
                "title": "CurrencyResource",
                "description": "Currency resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyVirtual"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CurrencyResource"
                }
            },
            "StoreCurrencyRequestVirtual": {
                "title": "Store Currency request",
                "description": "Store Currency request body data",
                "required": [
                    "name",
                    "code"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new currency",
                        "type": "string",
                        "example": "Российский рубль"
                    },
                    "code": {
                        "title": "code",
                        "description": "Code of new currency",
                        "type": "string",
                        "example": "RUB"
                    },
                    "course": {
                        "title": "Course of currency",
                        "description": "Current currency course",
                        "type": "float",
                        "example": "70.86"
                    },
                    "users": {
                        "description": "List of users",
                        "type": "array",
                        "items": {
                            "type": "int",
                            "example": 1
                        }
                    },
                    "update_date": {
                        "title": "Update Date",
                        "description": "Date of updating course currency",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-01-28 17:50:45"
                    }
                },
                "type": "object"
            },
            "UpdateCurrencyRequestVirtual": {
                "title": "Store Currency request",
                "description": "Store Currency request body data",
                "required": [
                    "course"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new currency",
                        "type": "string",
                        "example": "Российский рубль"
                    },
                    "code": {
                        "title": "code",
                        "description": "Code of new currency",
                        "type": "string",
                        "example": "RUB"
                    },
                    "course": {
                        "title": "Course of currency",
                        "description": "Current currency course",
                        "type": "float",
                        "example": "70.86"
                    },
                    "users": {
                        "description": "List of users",
                        "type": "array",
                        "items": {
                            "type": "int",
                            "example": 1
                        }
                    },
                    "update_date": {
                        "title": "Update Date",
                        "description": "Date of updating course currency",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-01-28 17:50:45"
                    }
                },
                "type": "object"
            },
            "Team": {
                "title": "Team",
                "description": "Team model",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of team",
                        "type": "string",
                        "example": "Main"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "owner_id": {
                        "title": "Owner ID",
                        "description": "User's id of the new team",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "TeamResource": {
                "title": "TeamResource",
                "description": "Team resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TeamResource"
                }
            },
            "StoreTeamRequest": {
                "title": "Store Team request",
                "description": "Store Team request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new team",
                        "type": "string",
                        "example": "Secondary"
                    },
                    "owner_id": {
                        "title": "owner_id",
                        "description": "User owner of new team",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateTeamRequest": {
                "title": "Update Team request",
                "description": "Update Team request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new team",
                        "type": "string",
                        "example": "Secondary Team"
                    },
                    "owner_id": {
                        "title": "owner_id",
                        "description": "Owner id of the new team",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Permission": {
                "title": "Permission",
                "description": "Permission model",
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Name of permission",
                        "type": "string",
                        "example": "see_articles"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "required": [
                    "title"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Name of role",
                        "type": "string",
                        "example": "Manager"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [
                    "name",
                    "email",
                    "login"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Sergey Emelyanov"
                    },
                    "login": {
                        "title": "Login",
                        "description": "Login of our user",
                        "type": "string",
                        "example": "sergeyem"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of user",
                        "type": "string",
                        "format": "email",
                        "example": "se@sergeyem.ru"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "Deleted at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "team": {
                        "$ref": "#/components/schemas/Team"
                    },
                    "operations_number": {
                        "title": "Operations Number",
                        "description": "List of operations per page",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "budget_day_start": {
                        "title": "Budget Day Start",
                        "description": "When starts of budget day of user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "primary_currency": {
                        "title": "Primary Currency",
                        "description": "Default currency for user",
                        "type": "string",
                        "example": "RUB"
                    },
                    "timezone": {
                        "title": "Timezone",
                        "description": "Default timezone for user",
                        "type": "string",
                        "example": "UTC"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "User phone number",
                        "type": "string",
                        "example": "79876757777"
                    },
                    "language": {
                        "title": "Language",
                        "description": "User language interface",
                        "type": "string",
                        "example": "ru_ru"
                    },
                    "roles": {
                        "title": "Assigned roles to user",
                        "description": "Roles",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        },
                        "xml": {
                            "name": "role",
                            "wrapped": true
                        }
                    }
                },
                "type": "object"
            },
            "PermissionResource": {
                "title": "PermissionResource",
                "description": "Permission resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "PermissionResource"
                }
            },
            "RoleResource": {
                "title": "RoleResource",
                "description": "Role resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "RoleResource"
                }
            },
            "UserResource": {
                "title": "UserResource",
                "description": "User resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            },
            "StorePermissionRequest": {
                "title": "Store Permission request",
                "description": "Store Permission request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new role",
                        "type": "string",
                        "example": "see_posts"
                    }
                },
                "type": "object"
            },
            "StoreRoleRequest": {
                "title": "Store Role request",
                "description": "Store Role request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new role",
                        "type": "string",
                        "example": "Manager"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name",
                    "login",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Sergey Emelyanov"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of new user",
                        "type": "string",
                        "example": "password"
                    },
                    "login": {
                        "title": "Login",
                        "description": "User login",
                        "type": "string",
                        "example": "sergeyem"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the new user",
                        "type": "string",
                        "example": "se@sergeyem.ru"
                    },
                    "team_id": {
                        "title": "team_id",
                        "description": "Team ID of new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "User [phone number]",
                        "type": "string",
                        "example": "+79876757777"
                    },
                    "language": {
                        "title": "Language",
                        "description": "User language interface",
                        "type": "string",
                        "example": "ru_ru"
                    },
                    "operations_number": {
                        "title": "Operations Number",
                        "description": "List of operations per page",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "budget_day_start": {
                        "title": "Budget Day Start",
                        "description": "When starts of budget day of user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdatePermissionRequest": {
                "title": "Update Permission request",
                "description": "Update Permission request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new permission",
                        "type": "string",
                        "example": "see_posts"
                    }
                },
                "type": "object"
            },
            "UpdateRoleRequest": {
                "title": "Update Role request",
                "description": "Update Role request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new role",
                        "type": "string",
                        "example": "Secondary Manager"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User request",
                "description": "Update User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Sergey Emelyanov"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email of the new user",
                        "type": "string",
                        "example": "se@sergeyem.ru"
                    },
                    "team_id": {
                        "title": "team_id",
                        "description": "Team id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "User [phone number]",
                        "type": "string",
                        "example": "+79876757777"
                    },
                    "language": {
                        "title": "Language",
                        "description": "User language interface",
                        "type": "string",
                        "example": "ru_ru"
                    },
                    "operations_number": {
                        "title": "Operations Number",
                        "description": "List of operations per page",
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "budget_day_start": {
                        "title": "Budget Day Start",
                        "description": "When starts of budget day of user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "SimpleFinance passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://localhost/oauth/authorize",
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "API Endpoints of Users"
        },
        {
            "name": "Teams",
            "description": "Everything about your Teams",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Permissions",
            "description": "All permissions in your system",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Roles",
            "description": "All roles in your system",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Countries",
            "description": "All countries added to system",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "Currencies",
            "description": "All currencies added to system",
            "externalDocs": {
                "description": "Центральный банк России",
                "url": "https://cbr.ru"
            }
        },
        {
            "name": "CardTypes",
            "description": "All card types added to system"
        },
        {
            "name": "AutoBrands",
            "description": "All auto brands added to system"
        },
        {
            "name": "Banks",
            "description": "All banks added to system"
        }
    ],
    "security": [
        []
    ]
}